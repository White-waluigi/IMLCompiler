program intDivTupel(in tup m:(int32,  int32), out tup q:(int32, int32))
global
 proc divide(in copy const tup n:(int32, int32),
             out ref var tup r:(int32, int32))
 do
   r init := tup(0, n[0]);

   while r[1] >= n do
     r[0] := r[0] + 1 ;
     r[1] := r[1] - n[1]
   endwhile
 endproc
do
 call divide(m init, q init)
endprogram
