program Cube(in n:int32)
global
  fun cube(n:int32) returns var s:int32
    //requires n >= 0;
    //ensures s == n*n*n;
  local
    var t:int32;
    var i:int32
  do
    t init := 1;
    s init := 0;
    i init := 0;
    while i < n
      //invariant s == i*i*i && t == (i-1)*(i-1) && i <= n;
    do
      t := t + 2*i - 1;
      s := s + 3*t + 3*i + 1;
      i := i + 1
    endwhile
  endfun;

  fun cubeRoot(n:int32) returns var i:int32
    //requires n >= -1;
    //ensures (i-1)*(i-1)*(i-1) <= n < i*i*i;
  local
    var t:int32;
    var s:int32
  do
    t init := 1;
    s init := 0;
    i init := 0;
    while s <= n
      //invariant s == i*i*i && t == (i-1)*(i-1) && (i-1)*(i-1)*(i-1) <= n;
    do
      t := t + 2*i - 1;
      s := s + 3*t + 3*i + 1;
      i := i + 1
    endwhile
  endfun;

  fun cubeRootV2(n:int32) returns var i:int32
    //requires n >= -1;
    //ensures i*i*i <= n < (i+1)*(i+1)*(i+1);
  local
    var t:int32;
    var s:int32
  do
    t init := 1;
    s init := 0;
    i init := 0;
    while s <= n
      //invariant s == i*i*i && t == (i-1)*(i-1) && (i-1)*(i-1)*(i-1) <= n;
    do
      t := t + 2*i - 1;
      s := s + 3*t + 3*i + 1;
      i := i + 1
    endwhile;
    i := i - 1
  endfun
do
  debugout cubeRootV2(n)
endprogram
