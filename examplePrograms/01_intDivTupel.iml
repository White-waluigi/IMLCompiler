program intDivTupel(in tup m:(int32,  int32), out tup q:(int32, int32))
global
 proc divide(in copy const tup m:(int32, int32),
             out ref var tup q:(int32, int32))
 do
   q init := tup(0, m[0]);

   while q[1] >= n do
     q[0] := q[0] + 1 ;
     q[1] := q[1] - m[1]
   endwhile
 endproc
do
 call divide(m init, q init)
endprogram
